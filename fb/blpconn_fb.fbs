namespace BlpConn.FB;

enum ReleaseStatus: uint8 {
    Unknown = 0,
    Released = 1,
    Scheduled = 2,
    Another = 99
}

enum ModuleType: uint8 {
    ModuleUnknown = 0,
    ModuleSystem = 1,
    ModuleSession = 2,
    ModuleSubscription = 3,
    ModuleService = 4,
    ModuleHearbeat = 5,
    ModuleAnother = 99
}

enum SubscriptionStatusType: uint8 {
  SubscriptionUnknown = 0,
  SubscriptionStarted,
  SubscriptionStreamsActivated,
  SubscriptionTerminated,
  SubscriptionSuccess,
  SubscriptionFailure,
  SubscriptionAnother = 99,
}

enum ServiceStatusType: uint8 {
  ServiceUnknown = 0,
  ServiceOpened,
  ServiceClosed,
  ServiceFailure,
  ServiceAnother = 99,
}

enum SessionStatusType: uint8 {
    SessionUnknown = 0,
    SessionConnectionUp = 1,
    SessionStarted = 2,
    SessionConnectionDown = 3,
    SessionTerminated = 4,
    SessionInvalidOptions = 5,
    SessionFailure = 6,
    SessionAnother = 99,
}

// Revised
enum EventSubType: uint8 {
    Unknown = 0,
    New = 1,
    Update = 2,
    Unitpaint = 3,
    Delete = 4,
    Another = 99
}

// Revised
enum EventType: uint8 {
    Unknown = 0,
    Actual = 1,
    Revision = 2,
    Estimate = 3,
    Calendar = 4,
    Another = 99
}

enum SessionType: uint8 {
    Unknowk = 0,
    SessionConnectionUp = 1,
    SessionStarted = 2,
    SessionConnectionDown = 3,
    SessionTerminated = 4,
    Another = 99,
}

table DateTime {
    micros: ulong;
    offset: short;
}

table Value {
    number: double;
    value: double;
    low: double;
    high: double;
    median: double;
    average: double;
    standard_deviation: double;
}

table HeadlineEconomicEvent {
    // Shared fields
    id_bb_global: string (required);
    parsekyable_des: string (required);
    description: string;
    event_type: EventType;
    event_subtype: EventSubType;
    event_id: uint64;
    observation_period: string;
    release_start_dt: DateTime;
    release_end_dt: DateTime;

    // Specific fields
    value: Value;
    prior_value: Value;
    prior_event_id: int;
    prior_observation_period: string;
    prior_economic_release_start_dt: DateTime;
    prior_economic_release_end_dt: DateTime;
}

table MacroReferenceData {
    corr_id: uint64;
    id_bb_global: string (required);
    parsekyable_des: string (required);
    description: string;
    indx_freq: string;
    indx_units: string;
    country_iso: string;
    indx_source: string;
    seasonality_transformation: string;
}

table MacroHeadlineEvent {
    corr_id: uint64;
    event_type: EventType;
    event_subtype: EventSubType;
    event_id: int;
    observation_period: string;
    release_start_dt: DateTime;
    release_end_dt: DateTime;
    prior_event_id: int;
    prior_observation_period: string;
    prior_economic_release_start_dt: DateTime;
    prior_economic_release_end_dt: DateTime;
    value: Value;
}

table MacroCalendarEvent {
    corr_id: uint64;
    id_bb_global: string (required);
    parsekyable_des: string (required);
    event_type: EventType;
    event_subtype: EventSubType;
    description: string;
    event_id: int;  // TODO Check for string
    observation_period: string;
    release_start_dt: DateTime;
    release_end_dt: DateTime;
    release_status: ReleaseStatus;
    relevance_value: double;
}

table HeadlineCalendarEvent {
    // Shared fields
    id_bb_global: string (required);
    parsekyable_des: string (required);
    description: string;
    event_type: EventType;
    event_subtype: EventSubType;
    event_id: int;
    observation_period: string;
    release_start_dt: DateTime;
    release_end_dt: DateTime;

    // Specific fields
    release_status: ReleaseStatus;
}

table LogMessage {
    log_dt: DateTime; // Timestamp of the log
    module: uint8; // Module that generated the log
    status: uint8;
    correlation_id: uint64;
    message: string; // Log message
}

union Message {
    HeadlineEconomicEvent,
    HeadlineCalendarEvent,
    MacroReferenceData,
    MacroHeadlineEvent,
    MacroCalendarEvent,
    LogMessage,
}

table Main {
    message: Message;
}
