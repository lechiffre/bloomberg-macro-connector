# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FB

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class LogMessage(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = LogMessage()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsLogMessage(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # LogMessage
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LogMessage
    def LogDt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from BlpConn.FB.DateTime import DateTime
            obj = DateTime()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # LogMessage
    def Module(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # LogMessage
    def Status(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # LogMessage
    def CorrId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # LogMessage
    def Message(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def LogMessageStart(builder):
    builder.StartObject(5)

def Start(builder):
    LogMessageStart(builder)

def LogMessageAddLogDt(builder, logDt):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(logDt), 0)

def AddLogDt(builder, logDt):
    LogMessageAddLogDt(builder, logDt)

def LogMessageAddModule(builder, module):
    builder.PrependUint8Slot(1, module, 0)

def AddModule(builder, module):
    LogMessageAddModule(builder, module)

def LogMessageAddStatus(builder, status):
    builder.PrependUint8Slot(2, status, 0)

def AddStatus(builder, status):
    LogMessageAddStatus(builder, status)

def LogMessageAddCorrId(builder, corrId):
    builder.PrependUint64Slot(3, corrId, 0)

def AddCorrId(builder, corrId):
    LogMessageAddCorrId(builder, corrId)

def LogMessageAddMessage(builder, message):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(message), 0)

def AddMessage(builder, message):
    LogMessageAddMessage(builder, message)

def LogMessageEnd(builder):
    return builder.EndObject()

def End(builder):
    return LogMessageEnd(builder)
