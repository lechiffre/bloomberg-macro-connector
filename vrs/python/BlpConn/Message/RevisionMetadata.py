# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Message

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RevisionMetadata(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RevisionMetadata()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRevisionMetadata(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # RevisionMetadata
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RevisionMetadata
    def PriorEventId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # RevisionMetadata
    def PriorObservationPeriod(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # RevisionMetadata
    def PriorEconomicReleaseType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # RevisionMetadata
    def PriorEconomicRelease(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def RevisionMetadataStart(builder):
    builder.StartObject(4)

def Start(builder):
    RevisionMetadataStart(builder)

def RevisionMetadataAddPriorEventId(builder, priorEventId):
    builder.PrependInt32Slot(0, priorEventId, 0)

def AddPriorEventId(builder, priorEventId):
    RevisionMetadataAddPriorEventId(builder, priorEventId)

def RevisionMetadataAddPriorObservationPeriod(builder, priorObservationPeriod):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(priorObservationPeriod), 0)

def AddPriorObservationPeriod(builder, priorObservationPeriod):
    RevisionMetadataAddPriorObservationPeriod(builder, priorObservationPeriod)

def RevisionMetadataAddPriorEconomicReleaseType(builder, priorEconomicReleaseType):
    builder.PrependUint8Slot(2, priorEconomicReleaseType, 0)

def AddPriorEconomicReleaseType(builder, priorEconomicReleaseType):
    RevisionMetadataAddPriorEconomicReleaseType(builder, priorEconomicReleaseType)

def RevisionMetadataAddPriorEconomicRelease(builder, priorEconomicRelease):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(priorEconomicRelease), 0)

def AddPriorEconomicRelease(builder, priorEconomicRelease):
    RevisionMetadataAddPriorEconomicRelease(builder, priorEconomicRelease)

def RevisionMetadataEnd(builder):
    return builder.EndObject()

def End(builder):
    return RevisionMetadataEnd(builder)
